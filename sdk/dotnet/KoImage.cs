// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ko
{
    [KoResourceType("ko:index/koImage:KoImage")]
    public partial class KoImage : Pulumi.CustomResource
    {
        /// <summary>
        /// base image to use
        /// </summary>
        [Output("baseImage")]
        public Output<string?> BaseImage { get; private set; } = null!;

        /// <summary>
        /// built image reference by digest
        /// </summary>
        [Output("imageRef")]
        public Output<string> ImageRef { get; private set; } = null!;

        /// <summary>
        /// import path to build
        /// </summary>
        [Output("importpath")]
        public Output<string> Importpath { get; private set; } = null!;

        /// <summary>
        /// platforms to build
        /// </summary>
        [Output("platforms")]
        public Output<string?> Platforms { get; private set; } = null!;

        /// <summary>
        /// working directory for the build
        /// </summary>
        [Output("workingDir")]
        public Output<string?> WorkingDir { get; private set; } = null!;


        /// <summary>
        /// Create a KoImage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KoImage(string name, KoImageArgs args, CustomResourceOptions? options = null)
            : base("ko:index/koImage:KoImage", name, args ?? new KoImageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KoImage(string name, Input<string> id, KoImageState? state = null, CustomResourceOptions? options = null)
            : base("ko:index/koImage:KoImage", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KoImage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KoImage Get(string name, Input<string> id, KoImageState? state = null, CustomResourceOptions? options = null)
        {
            return new KoImage(name, id, state, options);
        }
    }

    public sealed class KoImageArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// base image to use
        /// </summary>
        [Input("baseImage")]
        public Input<string>? BaseImage { get; set; }

        /// <summary>
        /// import path to build
        /// </summary>
        [Input("importpath", required: true)]
        public Input<string> Importpath { get; set; } = null!;

        /// <summary>
        /// platforms to build
        /// </summary>
        [Input("platforms")]
        public Input<string>? Platforms { get; set; }

        /// <summary>
        /// working directory for the build
        /// </summary>
        [Input("workingDir")]
        public Input<string>? WorkingDir { get; set; }

        public KoImageArgs()
        {
        }
    }

    public sealed class KoImageState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// base image to use
        /// </summary>
        [Input("baseImage")]
        public Input<string>? BaseImage { get; set; }

        /// <summary>
        /// built image reference by digest
        /// </summary>
        [Input("imageRef")]
        public Input<string>? ImageRef { get; set; }

        /// <summary>
        /// import path to build
        /// </summary>
        [Input("importpath")]
        public Input<string>? Importpath { get; set; }

        /// <summary>
        /// platforms to build
        /// </summary>
        [Input("platforms")]
        public Input<string>? Platforms { get; set; }

        /// <summary>
        /// working directory for the build
        /// </summary>
        [Input("workingDir")]
        public Input<string>? WorkingDir { get; set; }

        public KoImageState()
        {
        }
    }
}
